<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title><%= event.name %> | Event</title>

    <!-- Bootstrap 5 & FontAwesome -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css"
      rel="stylesheet"
    />
    <!-- Flatpickr -->
    <link
      href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"
      rel="stylesheet"
    />

    <style>
      body {
        background: #f0f2f5;
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 1rem;
      }
      .event-card {
        background: #fff;
        border-radius: 0.75rem;
        padding: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        max-width: 480px;
        width: 100%;
      }
      .event-card h2 {
        font-weight: 600;
        margin-bottom: 0.5rem;
      }
      .event-duration {
        color: #6c757d;
        margin-bottom: 1rem;
      }
      .event-description {
        color: #555;
        margin-bottom: 1.5rem;
      }
      .book-btn {
        background: #002655;
        color: #fff;
      }
      .book-btn:hover {
        background: #004085;
      }
      .slots-container .slot-btn {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        padding: 0.5rem 1rem;
        cursor: pointer;
        transition: background 0.2s, color 0.2s;
        margin: 0.25rem;
      }
      .slots-container .slot-btn.selected {
        background: #002655;
        color: #fff;
        border-color: #002655;
      }
      .slots-container .slot-btn:hover {
        background: #e9ecef;
      }
    </style>
  </head>
  <body>
    <div class="event-card">
      <h2>
        <i class="fa-solid fa-calendar-days me-2 text-primary"></i><%=
        event.name %>
      </h2>
      <p class="event-duration">
        <i class="fa-solid fa-stopwatch me-1"></i><%= event.duration %> minutes
      </p>
      <p class="event-description">
        <% if (event.description) { %>
        <i class="fa-solid fa-info-circle me-1"></i><%= event.description %> <%
        } else { %> <i class="fa-solid fa-info-circle me-1"></i>No description
        provided. <% } %>
      </p>

      <button class="btn book-btn w-100 mb-4" onclick="openBookingForm()">
        <i class="fa-solid fa-clock me-1"></i>Pick a Time
      </button>

      <div id="bookingForm" class="d-none">
        <!-- 1) Date -->
        <div class="mb-3">
          <label class="form-label">
            <i class="fa-solid fa-calendar-alt me-1"></i>Select Date
          </label>
          <input
            type="text"
            id="bookingDate"
            class="form-control"
            placeholder="Choose date"
            readonly
          />
        </div>

        <!-- 2) Time slots -->
        <div class="mb-3">
          <label class="form-label">
            <i class="fa-solid fa-clock me-1"></i>Available Times
          </label>
          <div class="slots-container d-flex flex-wrap"></div>
        </div>

        <!-- 3) Your info -->
        <div class="mb-3">
          <label class="form-label">
            <i class="fa-solid fa-user me-1"></i>Your Name
          </label>
          <input type="text" id="bookerName" class="form-control" disabled />
        </div>
        <div class="mb-3">
          <label class="form-label">
            <i class="fa-solid fa-envelope me-1"></i>Your Email
          </label>
          <input type="email" id="bookerEmail" class="form-control" disabled />
        </div>

        <button id="confirmBookingBtn" class="btn book-btn w-100" disabled>
          <i class="fa-solid fa-paper-plane me-1"></i>Confirm Booking
        </button>
      </div>
    </div>

    <!-- Dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
      // embed server-side data
      const availabilityRules = <%- JSON.stringify(availabilityRules) %>;
      const duration = <%= event.duration %>;
      const eventId = "<%= event.id %>";
      const agentId = "<%= agentId %>";
      let selectedSlot = null;

      function openBookingForm() {
        document.getElementById('bookingForm').classList.remove('d-none');
        flatpickr("#bookingDate", {
          minDate: "today",
          dateFormat: "Y-m-d",
          onChange: (_, dateStr) => generateAndRenderSlots(dateStr)
        });
      }

      function generateAndRenderSlots(date) {
        const day = new Date(date).getDay();
        // find rule for this weekday
        const rule = availabilityRules.find(r => r.day_of_week === day);
        const container = document.querySelector('.slots-container');
        container.innerHTML = '';

        if (!rule) {
          container.innerHTML = 'No availability on this day.';
          return;
        }

        // parse start/end into minutes
        const [sh, sm] = rule.start_time.split(':').map(Number);
        const [eh, em] = rule.end_time.split(':').map(Number);
        let slotStart = sh*60 + sm;
        const slotEnd = eh*60 + em;

        const slots = [];
        while (slotStart + duration <= slotEnd) {
          const hh = String(Math.floor(slotStart/60)).padStart(2,'0');
          const mm = String(slotStart%60).padStart(2,'0');
          slots.push(`${hh}:${mm}`);
          slotStart += duration;
        }

        if (slots.length === 0) {
          container.innerHTML = 'No slots available.';
          return;
        }

        slots.forEach(time => {
          const btn = document.createElement('div');
          btn.className = 'slot-btn';
          btn.innerText = time;
          btn.onclick = () => selectSlot(btn, time);
          container.appendChild(btn);
        });
      }

      function selectSlot(btn, time) {
        document.querySelectorAll('.slot-btn').forEach(el => el.classList.remove('selected'));
        btn.classList.add('selected');
        selectedSlot = time;
        document.getElementById('bookerName').disabled = false;
        document.getElementById('bookerEmail').disabled = false;
        document.getElementById('confirmBookingBtn').disabled = false;
      }

      document.getElementById('confirmBookingBtn').addEventListener('click', async () => {
        const name = document.getElementById('bookerName').value.trim();
        const email = document.getElementById('bookerEmail').value.trim();
        const date = document.getElementById('bookingDate').value;

        const isValidEmail = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
        const isValidName = /^[a-zA-Z\s]+$/.test(name);

        if (!name || !email || !selectedSlot || !isValidEmail || !isValidName) {
          return Swal.fire(
            "Error",
            "Please select a slot and fill your name & email.",
            "error"
          );
        }




        try {
          const res = await fetch("/api/bookings/create", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ eventId, date, time: selectedSlot, name, email, agentId }),
          });
          const data = await res.json();
          if (res.ok) {
            Swal.fire("Booked!", data.message, "success").then(() =>
              location.reload()
            );
          } else {
            throw new Error(data.message);
          }
        } catch (err) {
          Swal.fire('Error', err.message || 'Booking failed.','error');
        }
      });
    </script>
  </body>
</html>
